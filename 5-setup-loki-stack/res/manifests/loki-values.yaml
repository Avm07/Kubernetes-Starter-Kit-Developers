loki:
  enabled: true
  config:
    # ================== RETENTION SETTINGS FOR THE COMPACTOR ============================
    # Uncomment the below `compactor` section to enable the recommended `Compactor` retention settings
    #
    # compactor:
    #   working_directory: /data/loki/boltdb-shipper-compactor
    #   shared_store: aws
    #   compaction_interval: 10m
    #   retention_enabled: true
    #   retention_delete_delay: 2h
    #   retention_delete_worker_count: 150
    #
    # =================== RETENTION SETTINGS FOR TABLE MANAGER ============================
    # Uncomment the below `table_manager` and `chunk_store_config` section to enable the recommended `Table Manager` retention settings
    #
    # table_manager:
    #   retention_deletes_enabled: true
    #   retention_period: 24h
    # chunk_store_config:
    #   max_look_back_period: 24h
    # ======================== REMOTE STORAGE SETUP FOR DO SPACES ==============================
    # Uncomment the `schema_config` and `storage_config` section, to enable remote storage setup for `DO Spaces`
    # Make sure to replace the <> placeholders for the `aws` subsection accordingly
    # schema_config:
    #   configs:
    #     - from: "2020-10-24"
    #       store: boltdb-shipper
    #       object_store: aws
    #       schema: v11
    #       index:
    #         prefix: index_
    #         period: 24h
    # storage_config:
    #   boltdb_shipper:
    #     active_index_directory: /data/loki/boltdb-shipper-active
    #     cache_location: /data/loki/boltdb-shipper-cache
    #     cache_ttl: 24h # Can be increased for faster performance over longer query periods, uses more disk space
    #     shared_store: aws
    #   aws:
    #     bucketnames: <DO_SPACES_BUCKET_NAME>
    #     endpoint: <DO_SPACES_BUCKET_ENDPOINT>  # in the following format: <region>.digitaloceanspaces.com (e.g.: fra1.digitaloceanspaces.com)
    #     region: <DO_SPACES_BUCKET_REGION>      # short region name (e.g.: fra1)
    #     access_key_id: <DO_SPACES_ACCESS_KEY>
    #     secret_access_key: <DO_SPACES_SECRET_KEY>
    #     s3forcepathstyle: true

promtail:
  enabled: true

fluent-bit:
  enabled: false

grafana:
  enabled: false
  sidecar:
    datasources:
      enabled: true
  image:
    tag: 7.5.0

prometheus:
  enabled: false

filebeat:
  enabled: false
  filebeatConfig:
    filebeat.yml: |
      # logging.level: debug
      filebeat.inputs:
      - type: container
        paths:
          - /var/log/containers/*.log
        processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
      output.logstash:
        hosts: ["logstash-loki:5044"]

logstash:
  enabled: false
  image: grafana/logstash-output-loki
  imageTag: 1.0.1
  filters:
    main: |-
      filter {
        if [kubernetes] {
          mutate {
            add_field => {
              "container_name" => "%{[kubernetes][container][name]}"
              "namespace" => "%{[kubernetes][namespace]}"
              "pod" => "%{[kubernetes][pod][name]}"
            }
            replace => { "host" => "%{[kubernetes][node][name]}"}
          }
        }
        mutate {
          remove_field => ["tags"]
        }
      }
  outputs:
    main: |-
      output {
        loki {
          url => "http://loki:3100/loki/api/v1/push"
          #username => "test"
          #password => "test"
        }
        # stdout { codec => rubydebug }
      }
