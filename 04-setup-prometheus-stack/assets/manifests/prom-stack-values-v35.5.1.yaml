##
## Starter Kit configuration for Prometheus stack
##

## Create default rules for monitoring the cluster
#
# Disable `etcd` and `kubeScheduler` rules (managed by DOKS, so metrics are not accesible)
defaultRules:
  create: true
  rules:
    etcd: false
    kubeScheduler: false

## Component scraping kube scheduler
##
# Disabled because it's being managed by DOKS, so it's not accessible
kubeScheduler:
  enabled: false

## Component scraping etcd
##
# Disabled because it's being managed by DOKS, so it's not accessible
kubeEtcd:
  enabled: false

alertmanager:
  ## Deploy alertmanager
  ##
  enabled: true
  # config:
  #   global:
  #     resolve_timeout: 5m
  #     slack_api_url: "https://hooks.slack.com/services/TXXXX/BXXXX/<token>"
  #   route:
  #     repeat_interval: 1h
  #     routes:
  #     - match:
  #         alertname: EmojivotoInstanceDown
  #       receiver: 'slack'
  #       continue: true
  #   receivers:
  #   - name: 'slack'
  #     slack_configs:
  #     - channel: '#channelName'
  #       send_resolved: false
  #       title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
  #       text: "Emojivoto instance down."

# additionalPrometheusRulesMap:
#   rule-name:
#     groups:
#     - name: emojivoto-instance-down
#       rules:
#         - alert: EmojivotoInstanceDown
#           expr: sum(kube_pod_owner{namespace="emojivoto"}) by (namespace) < 10
#           for: 1m
#           labels:
#             severity: 'critical'
#           annotations:
#                   title: 'Instance {{ $labels.instance }} down'
#                   description: 'Emojivoto pod(s) is down for more than 1 minute.'

## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
##
grafana:
  enabled: true
  adminPassword: prom-operator # Please change the default password in production !!!
#   affinity:
#     nodeAffinity:
#       preferredDuringSchedulingIgnoredDuringExecution:
#       - weight: 1
#         preference:
#           matchExpressions:
#           - key: prefered
#             operator: In
#             values:
#             - observability

  # # Starter Kit setup for DigitalOcean Block Storage
  # persistence:
  #   enabled: true
  #   storageClassName: do-block-storage
  #   accessModes: ["ReadWriteOnce"]
  #   size: 5Gi

## Manages Prometheus and Alertmanager components
##
prometheusOperator:
  enabled: true

## Deploy a Prometheus instance
##
prometheus:
  enabled: true

  ## Starter Kit components service monitors
  #
  # additionalServiceMonitors:
  # # Uncomment the following section to enable emojivoto service monitoring
  #   - name: "emojivoto-monitor"
  #     selector:
  #       matchExpressions:
  #         - key: app
  #           operator: In
  #           values:
  #             - emoji-svc
  #             - voting-svc
  #     namespaceSelector:
  #       matchNames: 
  #         - emojivoto
  #     endpoints:
  #       - port: "prom"

  # # Uncomment the following section to enable ingress-nginx service monitoring
  #   - name: "ingress-nginx-monitor"
  #     selector:
  #       matchLabels:
  #         app.kubernetes.io/name: ingress-nginx
  #     namespaceSelector:
  #       matchNames:
  #         - ingress-nginx
  #     endpoints:
  #       - port: "metrics"

  # # Uncomment the following section to enable Loki service monitoring
  #   - name: "loki-monitor"
  #     selector:
  #       matchLabels:
  #         app: loki
  #         release: loki
  #     namespaceSelector:
  #       matchNames:
  #         - loki-stack
  #     endpoints:
  #       - port: "http-metrics"

  # # Uncomment the following section to enable Promtail service monitoring
  #   - name: "promtail-monitor"
  #     selector:
  #       matchLabels:
  #         app: promtail
  #         release: loki
  #     namespaceSelector:
  #       matchNames:
  #         - loki-stack
  #     endpoints:
  #       - port: "http-metrics"

  ## Prometheus StorageSpec for persistent data
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/storage.md
  ##
  # Starter Kit setup for DigitalOcean Block Storage
  #
  # prometheusSpec:
  #   affinity:
  #     nodeAffinity:
  #       preferredDuringSchedulingIgnoredDuringExecution:
  #       - weight: 1
  #         preference:
  #           matchExpressions:
  #           - key: prefered
  #             operator: In
  #             values:
  #             - observability
    # storageSpec:
    #   volumeClaimTemplate:
    #     spec:
    #       storageClassName: do-block-storage
    #       accessModes: ["ReadWriteOnce"]
    #       resources:
    #         requests:
    #           storage: 5Gi

